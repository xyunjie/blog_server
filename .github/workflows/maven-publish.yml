# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [main]
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Dependies Cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn package -Dmaven.test.skip=true
      
    - name: Build the Docker image
      run: |
        docker version
        # 登录阿里云镜像仓库
        docker login --username=${{ secrets.DOCKER_HUB_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
        cd app/chat-front
        mkdir docker
        cp ./Dockerfile ./docker
        cp ./target/*.jar ./docker
        cd docker
        # 使用Dockerfile构建镜像
        docker build . --file Dockerfile --tag ${{ vars.hubAddr }}/${{ vars.IMAGE_NAME }}:${{ vars.tag }}
        # 推送镜像到镜像仓库
        docker push ${{ vars.hubAddr }}/${{ vars.USER_NAME }}:${{ vars.tag }}
      
